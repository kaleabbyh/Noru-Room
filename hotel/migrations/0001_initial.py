# Generated by Django 4.0.3 on 2022-03-24 23:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='city',
            fields=[
                ('city_name', models.CharField(max_length=200)),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('city_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='guest',
            fields=[
                ('guest_name', models.CharField(max_length=200, null=True)),
                ('guest_email', models.EmailField(max_length=200)),
                ('guest_phone', models.CharField(max_length=200)),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('guest_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('guest_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('place_name', models.CharField(max_length=200)),
                ('about_place', models.TextField(blank=True, max_length=2000, null=True)),
                ('vote_total', models.IntegerField(blank=True, default=0, null=True)),
                ('vote_ratio', models.IntegerField(blank=True, default=0, null=True)),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('Place_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('place_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.city')),
            ],
            options={
                'ordering': ['-vote_ratio', 'vote_total'],
            },
        ),
        migrations.CreateModel(
            name='Place_type',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('Place_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='reservation',
            fields=[
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('ts_updated', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('complete', models.BooleanField(default=False)),
                ('reservation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotel.guest')),
            ],
        ),
        migrations.CreateModel(
            name='room_category',
            fields=[
                ('room_category_name', models.CharField(max_length=200)),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('room_category_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='room',
            fields=[
                ('room_number', models.IntegerField()),
                ('room_name', models.CharField(max_length=200)),
                ('room_added_date', models.DateTimeField(auto_now_add=True)),
                ('room_updated_date', models.DateTimeField(auto_now=True)),
                ('room_description', models.TextField()),
                ('room_price', models.FloatField()),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('room_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('Place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hotel.place')),
                ('room_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hotel.room_category')),
            ],
            options={
                'ordering': ['-room_added_date', '-room_updated_date'],
            },
        ),
        migrations.CreateModel(
            name='review',
            fields=[
                ('body', models.TextField(blank=True, null=True)),
                ('value', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.place')),
            ],
        ),
        migrations.CreateModel(
            name='reserved_room',
            fields=[
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('reserved_room_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('reservation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotel.reservation')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotel.room')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='place_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hotel.place_type'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
